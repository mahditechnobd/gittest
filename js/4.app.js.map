{"version":3,"sources":["webpack:///./src/pages/Home/banners.jsx"],"names":["params","pagination","effect","grabCursor","centeredSlides","slidesPerView","spaceBetween","loop","speed","autoplay","delay","disableOnInteraction","coverflow","rotate","stretch","depth","modifier","slideShadows","lazy","Banners","props","state","banners","this","className","length","map","banner_url","index","key","href","src","data-srcset","alt","Component"],"mappings":"2oCAMA,IAAMA,EAAS,CACbC,WAAY,qBACZC,OAAQ,YACRC,YAAY,EACZC,gBAAgB,EAChBC,cAAe,IACfC,cAAe,GACfC,MAAM,EACNC,MAAO,KACPC,SAAU,CACRC,MAAO,KACPC,sBAAsB,GAExBC,UAAW,CACTC,OAAQ,GACRC,QAAS,EACTC,MAAO,IACPC,SAAU,EACVC,cAAc,GAEhBC,MAAM,GAGFC,E,YAEJ,WAAYC,GAAM,a,4FAAA,UAChB,wBAAMA,KACDC,MAAQ,GAFG,E,gSAOhB,IAAMC,EAAUC,KAAKH,MAAME,QAC3B,OACI,yBAAKE,UAAU,aACb,kBAAC,IAAD,GACAA,UAAU,IACNxB,EAFJ,CAGAO,KAAMe,EAAQG,OAAS,IAIjBH,EAAQG,OAAS,EACjBH,EAAQI,KAAI,SAACC,EAAYC,GAAb,OACZ,uBAAGC,IAAKD,EAAOE,KAAMH,EAAU,WAAiBA,EAAU,WAAgB,KAC1E,6BAQE,yBACEI,IAAI,0CACJC,cAAaL,EAAU,MAEvBM,IAAI,QACJT,UAAU,gBAEZ,yBAAKA,UAAU,2DAKnB,U,8BA1CQU,aAkDPf","file":"js/4.app.js","sourcesContent":["import React, { Suspense, Component } from 'react';\n\nimport Swiper from 'react-id-swiper';\nimport 'swiper/css/swiper.css';\nimport ReactImageFallback from 'react-image-fallback';\n\nconst params = {\n  pagination: '.swiper-pagination',\n  effect: 'coverflow',\n  grabCursor: true,\n  centeredSlides: true,\n  slidesPerView: 1.2,\n  spaceBetween: -10,\n  loop: true,\n  speed: 1200,\n  autoplay: {\n    delay: 2500,\n    disableOnInteraction: false\n  },\n  coverflow: {\n    rotate: 50,\n    stretch: 0,\n    depth: 100,\n    modifier: 1,\n    slideShadows: true\n  },\n  lazy: true\n};\n\nclass Banners extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n    }\n  }\n\n  render() {\n    const banners = this.props.banners;\n    return (\n        <div className=\"AppSlider\">\n          <Swiper \n          className=\"\" \n          {...params} \n          loop={banners.length > 2 ? true : false}\n\n          >\n            {\n                banners.length > 0 ?\n                banners.map((banner_url, index) => \n                <a key={index} href={banner_url['target_url'] ? banner_url['target_url']: '#'}>\n                <div>\n                  {/* <ReactImageFallback\n                    src={banner_url['photo']}\n                    fallbackImage='./../static/loading_img.gif'\n                    initialImage='./../static/icon-loader.gif'\n                    alt='image'\n                    className=\"\"\n                  /> */}\n                  <img\n                    src='./../static/placeholder_banner_dark.svg'\n                    data-srcset={banner_url['photo']}\n                    // src={banner_url['photo']}\n                    alt='image'\n                    className=\"swiper-lazy\"\n                  />\n                  <div className=\"swiper-lazy-preloader swiper-lazy-preloader-white\" />\n                </div>\n                </a>\n              )\n              :\n              ''\n            }\n          </Swiper>\n          </div>\n    );\n  }\n}\n\nexport default Banners;"],"sourceRoot":""}